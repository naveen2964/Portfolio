@import url('https://fonts.googleapis.com/css2?family=Titillium+Web:ital,wght@0,200;0,300;0,400;0,600;0,700;0,900;1,200;1,300;1,400;1,600;1,700&display=swap');


body {
    margin: 0;
    font-family: 'Titillium Web', sans-serif;
}

canvas {
    display: inline-block;
    vertical-align: bottom;
}

#tsparticles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; /* Ensure it's behind other content */
}

/* Heading styling */
.tech-stack-heading {
    position: absolute;
    top: 1060px; /* Adjust top position */
    left: 20px; /* Adjust right position */
    transform: rotate(270deg);
    transform-origin: top left;
    font-size: 5em; /* Adjust font size */
    font-weight: bold;
    color: #fff; /* Text color */
    padding: 10px;
    z-index: 3; /* Ensure it's above other content */
}
/* Define the keyframes for the slide-up and fade-in animation */
@keyframes slideUpFadeIn {
    0% {
        opacity: 0;
        transform: translateY(50px); /* Starts 50px below its original position */
    }
    100% {
        opacity: 1;
        transform: translateY(0); /* Ends at its original position */
    }
}

/* Apply the animation to the skills container with a delay */
.skill-container {
    animation: slideUpFadeIn 1s ease-out; /* Animation duration and easing */
    opacity: 0; /* Start as invisible */
    transform: translateY(50px); /* Start from below */
    animation-fill-mode: both; /* Ensure it retains final state */
    animation-delay: var(--delay); /* Delay based on custom property */
}

/* Ensure the animation delay is set using data attributes */
.skill-container:nth-child(1) { --delay: 0s; }
.skill-container:nth-child(2) { --delay: 0.2s; }
.skill-container:nth-child(3) { --delay: 0.4s; }
.skill-container:nth-child(4) { --delay: 0.6s; }
.skill-container:nth-child(5) { --delay: 0.8s; }
.skill-container:nth-child(6) { --delay: 1s; }
.skill-container:nth-child(7) { --delay: 1.2s; }
.skill-container:nth-child(8) { --delay: 1.4s; }
.skill-container:nth-child(9) { --delay: 1.6s; }
.skill-container:nth-child(10) { --delay: 1.8s; }
.skill-container:nth-child(11) { --delay: 2s; }
.skill-container:nth-child(12) { --delay: 2.2s; }

/* Ensure skill containers are above the canvas */
/* Ensure skill containers are above the canvas */
.skills-container {
    position: relative;
    display: grid;
    grid-template-columns: repeat(4, 1fr); /* 4 columns */
    grid-template-rows: repeat(auto-fit, minmax(200px, auto)); /* Flexible rows */
    row-gap: 160px; /* Adjust row gap to fit better */
    column-gap: 50px; /* Adjust column gap to fit better */
    justify-content: center; /* Center the grid */
    padding: 20px;
    bottom: 20px;
    margin-left: 350px;
    margin-right: 250px; /* Move skills to the left to make room for heading */
    top: 40px;
    z-index: 2; /* Ensure skills content is above the canvas */
    min-height: 600px; /* Ensure container is tall enough for multiple rows */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
}

/* Skill card with glassmorphic and neumorphic design */
.skill-container {
    text-align: center;
    width: 180px; /* Adjust size */
    height: 150px;
    position: relative;
    background: rgba(255, 255, 255, 0.1); /* Glassmorphic effect */
    border-radius: 20px;
    box-shadow: inset 8px 8px 16px rgba(0, 0, 0, 0.3),
                8px 8px 16px rgba(255, 255, 255, 0.2); /* Neumorphism effect */
    backdrop-filter: blur(3px); /* Glass effect */
    transition: transform 0.5s ease-in-out, box-shadow 0.5s ease-in-out;
}

/* Skill container hover effect */
.skill-container:hover {
    transform: scale(1.05); /* Slightly enlarge on hover */
    box-shadow: inset 12px 12px 24px rgba(0, 0, 0, 0.4),
                12px 12px 24px rgba(255, 255, 255, 0.3); /* Enhanced neumorphism effect */
}

/* Skill icon styling */
.skill-icon {
    width: 120px;
    height: 120px;
    margin: 10px; /* Center icon with margin */
    transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
}

/* Skill names with glassmorphic design */
.skill-name {
    transform: scale(0.8);
    margin-top: 30px; /* Adjust top margin */
    font-size: 1.4em; /* Increase font size */
    width: 200px; /* Ensure width matches skill container */
    color: #fff; /* White text */
    background: rgba(0, 0, 0, 0.8); /* Darker background for better contrast */
    padding: 10px; /* Adjust padding */
    border-radius: 10px;
    backdrop-filter: blur(30px); /* Glass effect */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5); /* Subtle shadow */
    transition: background 0.5s ease, box-shadow 0.5s ease;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.8); /* Improved text visibility */
    text-align: center; /* Center the text */
    position: relative; /* Needed for pseudo-elements */
    overflow: hidden; /* Hide glitch overflow */
}

/* Glitch effect on hover */
.skill-container:hover .skill-name {
    animation: glitch 0.5s linear infinite;
}

.skill-container:hover .skill-name::before,
.skill-container:hover .skill-name::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: #fff;
    background: rgba(0, 0, 0, 0.8); /* Adjust background for glitch effect */
    overflow: hidden;
}

/* Before pseudo-element for glitch */
.skill-container:hover .skill-name::before {
    left: -2px;
    text-shadow: -2px 0 red;
    clip: rect(20px, 220px, 30px, 0);
    animation: glitchTop 0.3s linear infinite;
}

/* After pseudo-element for glitch */
.skill-container:hover .skill-name::after {
    left: 2px;
    text-shadow: -2px 0 blue;
    clip: rect(85px, 200px, 105px, 0);
    animation: glitchBottom 0.4s linear infinite;
}



/* Keyframes for glitch animation */
@keyframes glitch {
    0% { clip: rect(24px, 9999px, 25px, 0); }
    10% { clip: rect(56px, 9999px, 61px, 0); }
    20% { clip: rect(28px, 9999px, 29px, 0); }
    30% { clip: rect(10px, 9999px, 12px, 0); }
    40% { clip: rect(77px, 9999px, 78px, 0); }
    50% { clip: rect(30px, 9999px, 31px, 0); }
    60% { clip: rect(82px, 9999px, 84px, 0); }
    70% { clip: rect(62px, 9999px, 63px, 0); }
    80% { clip: rect(95px, 9999px, 96px, 0); }
    90% { clip: rect(24px, 9999px, 25px, 0); }
    100% { clip: rect(50px, 9999px, 51px, 0); }
}

/* Keyframes for top glitch animation */
@keyframes glitchTop {
    0% { clip: rect(42px, 9999px, 43px, 0); transform: translate(-2px, -2px); }
    10% { clip: rect(21px, 9999px, 22px, 0); transform: translate(2px, 2px); }
    20% { clip: rect(68px, 9999px, 69px, 0); transform: translate(-2px, -2px); }
    30% { clip: rect(85px, 9999px, 86px, 0); transform: translate(2px, 2px); }
    40% { clip: rect(30px, 9999px, 31px, 0); transform: translate(-2px, -2px); }
    50% { clip: rect(48px, 9999px, 49px, 0); transform: translate(2px, 2px); }
    60% { clip: rect(84px, 9999px, 85px, 0); transform: translate(-2px, -2px); }
    70% { clip: rect(22px, 9999px, 23px, 0); transform: translate(2px, 2px); }
    80% { clip: rect(56px, 9999px, 57px, 0); transform: translate(-2px, -2px); }
    90% { clip: rect(71px, 9999px, 72px, 0); transform: translate(2px, 2px); }
    100% { clip: rect(43px, 9999px, 44px, 0); transform: translate(-2px, -2px); }
}

/* Keyframes for bottom glitch animation */
@keyframes glitchBottom {
    0% { clip: rect(5px, 9999px, 6px, 0); transform: translate(2px, 2px); }
    10% { clip: rect(45px, 9999px, 46px, 0); transform: translate(-2px, -2px); }
    20% { clip: rect(74px, 9999px, 75px, 0); transform: translate(2px, 2px); }
    30% { clip: rect(60px, 9999px, 61px, 0); transform: translate(-2px, -2px); }
    40% { clip: rect(88px, 9999px, 89px, 0); transform: translate(2px, 2px); }
    50% { clip: rect(35px, 9999px, 36px, 0); transform: translate(-2px, -2px); }
    60% { clip: rect(52px, 9999px, 53px, 0); transform: translate(2px, 2px); }
    70% { clip: rect(11px, 9999px, 12px, 0); transform: translate(-2px, -2px); }
    80% { clip: rect(76px, 9999px, 77px, 0); transform: translate(2px, 2px); }
    90% { clip: rect(91px, 9999px, 92px, 0); transform: translate(-2px, -2px); }
    100% { clip: rect(56px, 9999px, 57px, 0); transform: translate(2px, 2px); }
}

/* Style for the Home button */
.home-button {
    position: fixed;
    bottom: 20px; /* Distance from the bottom edge */
    right: 20px; /* Distance from the right edge */
    background: none; /* Remove background */
    padding: 0; /* Remove padding */
    border: none; /* Remove border */
    box-shadow: none; /* Remove shadow */
    transition: transform 0.3s ease, border-bottom 0.3s ease;
}

/* Style for the image inside the button */
.home-button img {
    width: 30px; /* Adjust size as needed */
    height: 30px; /* Adjust size as needed */
    display: block; /* Remove extra space below image */
}

/* Hover effect for the Home button */
.home-button:hover {
    border-bottom: 2px solid #000; /* Underline effect */
    transform: scale(1.05); /* Slightly enlarge on hover */
    animation: bounce 1s infinite; /* Apply bounce animation */

}

/* Bounce animation */
@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0); /* Start position */
    }
    40% {
        transform: translateY(-30px); /* Bounce up */
    }
    60% {
        transform: translateY(-15px); /* Bounce back down */
    }
}


